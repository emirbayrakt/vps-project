# ─────────────────────────  FRONTEND  (React SPA) ─────────────────────────
upstream spa_upstream {
    server 127.0.0.1:3001;   # container port exposed on the host
}

server {
    listen 443 ssl http2;
    server_name icc.ebayraktar.com;

    ssl_certificate     /etc/letsencrypt/live/icc.ebayraktar.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/icc.ebayraktar.com/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass http://spa_upstream;
        proxy_set_header Host            $host;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

# Auto‑redirect HTTP → HTTPS
server {
    listen 80;
    server_name icc.ebayraktar.com;
    return 301 https://$host$request_uri;
}

# ────────────────────────────  BACKEND  (API + WS) ─────────────────────────
# Sticky ‘ip_hash’ isn’t strictly required while you have one container,
# but it future‑proofs you for “docker compose up --scale api=3”.
upstream api_upstream {
    ip_hash;
    server 127.0.0.1:3000;   # container port exposed on the host
}

server {
    listen 443 ssl http2;
    server_name iccapi.ebayraktar.com;

    sudo service nginx reload

    ssl_certificate     /etc/letsencrypt/live/icc.ebayraktar.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/icc.ebayraktar.com/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

    # Git webhook endpoint
    location /hook/ {
        proxy_pass http://localhost:9000/hooks/;

        proxy_set_header Host      $host;
        proxy_set_header X-Real-IP $remote_addr;

        # Allow only GitHub IP ranges (hardening)
        allow 140.82.112.0/20;
        allow 192.30.252.0/22;
        allow 185.199.108.0/22;
        allow 143.55.64.0/20;
        deny  all;
    }

    # ---------------  WebSockets & API  ----------------
    # Socket.IO always hits the /socket.io/ path internally,
    # even when the client uses namespaces like /notifications.
    location /socket.io/ {
        proxy_pass http://api_upstream;

        # WebSocket headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade    $http_upgrade;
        proxy_set_header Connection "Upgrade";

        # Forward client info
        proxy_set_header Host            $host;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Keep the WS alive
        proxy_read_timeout  120s;
        proxy_send_timeout  120s;
    }

    # All other REST endpoints
    location / {
        proxy_pass http://api_upstream;
        proxy_http_version 1.1;

        proxy_set_header Host            $host;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

# Auto‑redirect HTTP → HTTPS
server {
    listen 80;
    server_name iccapi.ebayraktar.com;
    return 301 https://$host$request_uri;
}

